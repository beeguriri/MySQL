-- 실습문제
 
 -- 33 <학생> 테이블에서 '이름', '주소’, ‘시군구', '시도', '우편번호의 정보를 묶어서 아래와 같이 하나의 필드처럼 보이도록 가져오는 SQL문을 작성하시오. 
 -- (묶은 필드의 이름은 '학생정보'로 출력한다. '이름'으로 정렬하시오.) 
 SELECT CONCAT (이름, '(', 우편번호, ' ', 시도, ' ', 시군구, ' ', 주소, ')') AS 학생정보
 FROM 학생
 ORDER BY 이름;
 
 -- 34 <과목> 테이블에서 '과목명', '담당교수' 필드를 가져와서 '담당교수' 필드의 별명을 담당교수사번'으로 바꾸어 출력하는 SQL문을 작성하시오. 
 SELECT 과목명, 담당교수 '담당교수사번'
 FROM 과목;
 
 -- 35 <수강신청> 테이블에서 아래와 같이 '학번'이 '1801001'인 학생의 수강신청 자료를 출력하도록 SQL문을 작성하시오. 
 SELECT 수강신청번호, CONCAT(연도, '학년도-', 학기, '학기') AS 신청학년도
 FROM 수강신청
 WHERE 학번 = 1801001;
 
 -- 36 〈학생〉 테이블에서 '학번'과 '이름', 그리고 이름 중 성씨만 가져오는 SQL문을 작성하시오. 
 SELECT 학번, 이름, SUBSTR(이름,1,1) '성'
 FROM 학생;
 
 -- 37 〈학생〉 테이블에서 16학번인 학생의 학번과 이름, 학년을 가져오는 SQL문을 작성하시오.
 SELECT 학번, 이름, 학년
 FROM 학생
 WHERE 학번 LIKE '16%';
 
 -- 38 <수강신청> 테이블에서 컴퓨터정보학과가 아닌 학생의 '수강신청번호', '학번','날짜'를 가져오는 SQL문을 작성하시오. 
 SELECT 수강신청.수강신청번호, 수강신청.학번, 수강신청.날짜
 FROM 수강신청, 학생, 학과
 WHERE 수강신청.학번 = 학생.학번 AND 학생.학과 = 학과.학과번호 AND 학과.학과명 != '컴퓨터정보학과';
 
 -- 39 <수강신청> 테이블에서 2018년 3월에 수강 신청한 레코드의 '수강신청번호', 학번', '날짜'를 가져오는 SQL문을 작성하시오. 
 SELECT 수강신청번호, 학번, 날짜
 FROM 수강신청
 WHERE 날짜 LIKE '2018-03-%';
 
 -- 40 <수강신청내역> 테이블에서 평점이 입력되어 있는(평점'이 -1이 아닌) 레코드중 
 -- '수강신청번호', '과목번호', '평점'과 평점이 0이면 '미취득' 아니면 '취득'으로 출력하는 SQL문을 작성하시오. 
 SELECT 수강신청번호, 과목번호, 평점, if(평점=0,'미취득','취득') '취득여부'
 FROM 수강신청내역
 WHERE 평점 != -1;
 
 -- 41 〈학생〉 테이블에서 이름'과 시도'를 하나로 묶어 필드명을 '이름'으로 읽어오는 SQL문을 작성하시오. 
 SELECT concat(이름, '(',시도,')') '이름'
 FROM 학생;
 
 -- 42 <과목> 테이블에서 ‘담당교수'와 '과목명'을 국문과 영문으로 읽어오는 SQL문을작성하시오
 SELECT 담당교수, concat(과목명, '(', 영문명, ')') '과목명'
 FROM 과목
 ORDER BY 과목명;
 
 -- 43 <과목> 테이블에서 '과목명'과 학점', 그리고 한 학기를 15주라 가정했을 때 한 학기 총 수업 시간 수를 읽어오는 SQL문을 작성하시오. 
 SELECT 과목명, 학점, 학점*15 '총시간수'
 FROM 과목
 ORDER BY 과목명;
 
 -- 44 <학생> 테이블에서 '학번'과 이름에서 성씨(last name)를 뺀 이름(first name)을 출력하는 SQL문을 작성하시오. 
 SELECT 학번, SUBSTR(이름,2) '이름'
 FROM 학생;
 
 -- 45 <수강신청> 테이블에서 3월 1일 수강 신청한 데이터의 '학번'과 '날짜'를 출력하는 SQL문을 작성하시오 
 SELECT 학번, 날짜
 FROM 수강신청
 WHERE 날짜 LIKE '%03-01%';
 
 -- 46 <학생> 테이블에서 아래 그림과 같이 '학번', '이름', 학과'와 컴퓨터정보학과인지 다른 학과인지를 출력하는 SQL문을 작성하시오. 
 SELECT 학번, 이름, 학과, IF((SELECT 학과명 FROM 학과 WHERE 학생.학과=학과.학과번호)='컴퓨터정보학과','컴퓨터정보학과','타과')'비고'
 FROM 학생;
 
 -- 47 〈수강신청내역〉 테이블에서 전체 행의 수(레코드의 수)를 계산하는 SQL문을 작성하시오 
 SELECT COUNT(*) '신청수'
 FROM 수강신청내역;
 
 -- 48 〈수강신청내역〉 테이블에서 '수강신청번호'가 '1810002'인 수강신청 레코드의 수를 계산하는 SQL문을 작성하시오. 
 SELECT COUNT(수강신청번호) '과목수'
 FROM 수강신청내역
 WHERE 수강신청번호='1810002';
 
 -- 49 <교수> 테이블에서 '전화번호'가 저장되어 있는 교수의 수를 계산하는 SQL문을 작성하시오. 
 SELECT COUNT(*) '교수 수'
 FROM 교수
 WHERE 전화번호 IS NOT NULL;
 
 -- 50 <과목> 테이블에서 과목을 담당하고 있는 교수가 몇 명인지 출력하시오. 
 SELECT COUNT(distinct(담당교수))'강의 교수 수'
 FROM 과목;
 
 -- 51 <과목> 테이블에서 전체 과목의 학점의 평균과 합을 구하는 SQL문을 작성하시오. 
 SELECT AVG(학점) '평균학점', SUM(학점) '총학점'
 FROM 과목;
 
 -- 52 <과목> 테이블의 과목 중에 최대 학점과 최소 학점을 구하는 SQL문을 작성하시오. 
 SELECT MAX(학점) '최대학점', MIN(학점) '최소학점'
 FROM 과목;
 
 -- 53 <과목> 테이블에서 교수별로 담당하고 있는 과목 수와 학점 합계를 출력하시오. 
 SELECT 담당교수, COUNT(과목명)'과목수', SUM(학점)'학점수'
 FROM 과목
 group by 담당교수;
 
 -- 54 〈수강신청내역> 테이블에서 수강 신청한 서로 다른 과목의 수가 몇 과목인지를 구하는 SQL문을 작성하시오. 
 SELECT COUNT(distinct(과목번호))'과목 수'
 FROM 수강신청내역;
 
 -- 55 <수강신청> 테이블에서 수강 신청한 학생이 몇 명인지를 구하는 SQL문을 작성하시오. 
 SELECT COUNT(distinct(학번)) '학생수'
 FROM 수강신청;
 
 -- 56 〈수강신청내역> 테이블에서 '수강신청번호' '1810001'의 신청 과목 수와 평균 평점을 구하는 SQL문을 작성하시오. 
 SELECT COUNT(*) '신청과목수', AVG(평점) '평균 평점'
 FROM 수강신청내역
 WHERE 수강신청번호 = '1810001';
 
 -- 57 <수강신청내역> 테이블에서 아래와 같이 과목별로 수강자 수를 읽어오는(과목번호, 수강자 수) SQL문을 작성하시오. 
 SELECT 과목번호, COUNT(과목번호) '수강자수'
 FROM 수강신청내역
 group by 과목번호;
 
 -- 58 위의 문제에서 '평점'이 - 1인 과목은 제외하고 출력하도록 필터링하시오 
 SELECT 과목번호, COUNT(과목번호) '수강자수'
 FROM 수강신청내역
 WHERE 평점 != -1
 group by 과목번호;
 
 -- 59 위의 문제에서 과목별 평균 평점을 출력하시오.
 SELECT 과목번호, COUNT(과목번호) '수강자수', AVG(평점) '평균평점'
 FROM 수강신청내역
 WHERE 평점 != -1
 group by 과목번호;
 
 -- 60 위의 문제에서 수강자 수가 4 명 이상인 과목만을 출력하도록 필터링하시오. 
 SELECT 과목번호, COUNT(과목번호) '수강자수', AVG(평점) '평균평점'
 FROM 수강신청내역
 WHERE 평점 != -1
 group by 과목번호
 HAVING  COUNT(과목번호) >= 4;
 
-- 61 위의 문제에서 평균평점을 기준으로 오름차순으로 정렬하시오. 
 SELECT 과목번호, COUNT(과목번호) '수강자수', AVG(평점) '평균평점'
 FROM 수강신청내역
 WHERE 평점 != -1
 group by 과목번호
 HAVING  COUNT(과목번호) >= 4
 ORDER BY 수강자수;
 
 -- 62 <수강신청내역> 테이블에서 아래와 같이 '수강신청번호별로 수강과목 수와 평균평점을 출력하시오. 
 -- (단, 수강과목 수가 3 이상인 것만 출력하고 평균평점에 대하여 내림차순으로 정렬하시오). 
 SELECT 수강신청번호, COUNT(과목번호) '수강과목수', AVG(평점) '평균평점'
 FROM 수강신청내역
 WHERE 평점 != -1
 GROUP BY 수강신청번호
 HAVING COUNT(과목번호) >= 3
 ORDER BY 평균평점 DESC;
 
 -- 63 모든 학생에 대하여 학번, 학과번호, 이름, 소속 학과 이름을 출력하는 SQL 문을 작성하시오.
 SELECT 학번, 학과, 이름, 학과명
 FROM 학생, 학과
 WHERE 학생.학과 = 학과.학과번호;

-- 64 <수강신청내역> 테이블에서 수강신청번호 '1810001'와 '1610001'에 대하여 
-- 수강신청번호와 수강 과목번호, 수강 과목명 출력하는 SQL 문을 작성하시오.
select 수강신청내역.수강신청번호, 수강신청내역.과목번호, 과목.과목명
FROM 수강신청내역, 과목
WHERE 수강신청내역.과목번호 = 과목.과목번호 && 수강신청번호 IN ('1810001', '1610001');
 
-- 65 <수강신청> 테이블에서 2018 년도 수강신청에 대하여 
-- 수강신청번호, 신청자 학번, 신청자 이름을 출력하는 SQL 문을 작성하시오.
SELECT 수강신청.수강신청번호, 수강신청.학번, 학생.이름
FROM 수강신청, 학생
WHERE 수강신청.학번 = 학생.학번 && 날짜 LIKE '2018%';

-- 66 학번이 1801001'인 학생이 수강 신청한 수강신청번호, 과목번호, 과목명을 출력하는 SQL 문을 작성하시오. 
SELECT 수강신청내역.수강신청번호, 수강신청내역.과목번호, 과목.과목명
FROM 수강신청내역, 과목, 수강신청
WHERE 수강신청내역.수강신청번호 = 수강신청.수강신청번호 && 수강신청.학번 = '1801001' && 수강신청내역.과목번호 = 과목.과목번호;
 
-- 67 : 66번과 동일문제
 
-- 68 학번이 '1801001'인 학생이 수강 신청한 과목 수와 평점 합계를 출력하는 SQL 문을 작성하시오. 
SELECT COUNT(수강신청내역.과목번호) '과목수', SUM(수강신청내역.평점) '평점합계'
FROM 수강신청내역, 수강신청
WHERE 수강신청내역.수강신청번호 = 수강신청.수강신청번호 && 수강신청.학번 = '1801001';
  
-- 69 수강신청 별로 신청 학생의 학번, 이름, 평균 평점(평점합계/과목수)를 출력하는 SQL 문을 작성하시오. 
-- (단, 학점이 부여된 수강신청만 출력한다) 
SELECT 수강신청.수강신청번호, 수강신청.학번, 학생.이름, AVG(수강신청내역.평점)'평균평점'
FROM 수강신청, 수강신청내역, 학생, 과목
WHERE 수강신청.수강신청번호 = 수강신청내역.수강신청번호 && 수강신청.학번 = 학생.학번 && 수강신청내역.과목번호 = 과목.과목번호 && 수강신청내역.평점 >= 0
group by 수강신청.수강신청번호;

-- 70 모든 학생에 대하여 학번, 학과번호, 이름, 소속 학과 이름을 출력하는 SOL 문을 작성하시오. 
SELECT 학생.학번, 학생.학과, 학생.이름, 학과.학과명
FROM 학생, 학과
WHERE 학생.학과 = 학과.학과번호;

-- 71 <수강신청내역> 테이블에서 수강신청번호 '1810001'와 '1610001'에 대하여 수강신청번호와 수강 과목번호, 수강 과목명을 출력하는 SQL 문을 작성하시오. 
SELECT 수강신청내역.수강신청번호, 수강신청내역.과목번호, 과목.과목명
FROM 수강신청내역, 과목
WHERE 수강신청내역.과목번호 = 과목.과목번호 && 수강신청내역.수강신청번호 IN (1810001, 1610001)
ORDER BY 수강신청번호;
  
-- 72 <수강신청> 테이블에서 2018 년도 수강신청에 대하여 수강신청번호, 신청자 학번, 신청자 이름을 출력하는 SQL 문을 작성하시오. 
SELECT 수강신청.수강신청번호, 수강신청.학번, 학생.이름
FROM 수강신청, 학생
WHERE 수강신청.학번 = 학생.학번 && 연도='2018';

-- 73 학번이 '1801001'인 학생이 수강 신청한 수강신청번호, 과목번호, 과목명을 출력하는 SQL 문을 작성하시오. 
-- 66번과 동일문제

-- 74 사번이 '1000004'인 교수와 같은 학과에 소속되어 있는 교수의 사번, 학과, 이름을 출력하시오 
SELECT 사번, 학과, 이름
FROM 교수
WHERE 학과 = (SELECT 학과
					FROM 교수
					WHERE 사번 = '1000004');

/*답확인필요*/
-- 75 학생별로 학번, 이름, 수강 신청한 과목 수, 평균 평점을 출력하시오. (단, 학점이 부여된 수강 신청만 출력한다) 
-- (단, 학점이 부여된 수강신청만 출력한다) 
SELECT 수강신청.학번, 학생.이름, COUNT(수강신청내역.과목번호)'과목수', AVG(수강신청내역.평점)'평균평점'
FROM 수강신청, 수강신청내역, 학생, 과목
WHERE 수강신청.수강신청번호 = 수강신청내역.수강신청번호 && 수강신청.학번 = 학생.학번 && 수강신청내역.과목번호 = 과목.과목번호 && 수강신청내역.평점 != -1 && 과목.학점 > 0
group by 수강신청.학번
ORDER BY 평균평점 desc;

SELECT 수강신청.학번, 수강신청내역.평점
FROM  수강신청, 수강신청내역
WHERE 수강신청.수강신청번호 = 수강신청내역.수강신청번호 && 평점 >=0;

-- 76 과목별로 수강한 인원, 부여된 평점의 평균을 출력하시오. (단, 1 학기 과목에 한한다)
SELECT 수강신청내역.과목번호, 과목.과목명, COUNT(과목.과목번호) '수강인원', AVG(수강신청내역.평점) '평균평점'
FROM 수강신청, 수강신청내역, 과목
WHERE 수강신청.수강신청번호 = 수강신청내역.수강신청번호 && 수강신청내역.과목번호 = 과목.과목번호 && 수강신청.학기=1 && 수강신청내역.평점 != -1
GROUP BY 수강신청내역.과목번호
ORDER BY 과목번호;

